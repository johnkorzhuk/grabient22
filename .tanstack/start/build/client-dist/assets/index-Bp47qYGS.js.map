{"version":3,"file":"index-Bp47qYGS.js","sources":["../../../../../src/routes/_layout/index.tsx?tsr-split=component"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { createFileRoute, useSearch } from '@tanstack/react-router';\nimport { convexQuery } from '@convex-dev/react-query';\nimport { api } from '../../../convex/_generated/api';\nimport { CollectionsDisplay } from '~/components/CollectionsDisplay';\nimport { useAuth } from '@clerk/tanstack-react-start';\nimport { useConvexPaginatedQuery } from '@convex-dev/react-query';\nimport { DEFAULT_COLLECTION_PAGE_SIZE } from '../_layout';\n\n// // Process seed data by applying globals to coeffs and removing globals field\n// const processedSeedData = (seedData as unknown as Array<{\n//   coeffs: number[][];\n//   globals: number[];\n//   steps: number;\n//   angle: number;\n//   style: string;\n// }>).map((item) => {\n//   const { globals, ...rest } = item;\n//   // Use type assertion to match the expected type for applyGlobals\n//   const newCoeffs = applyGlobals(item.coeffs as any, globals as any);\n//   return {\n//     ...rest,\n//     coeffs: newCoeffs\n//   };\n// });\n\n// // Output stringified JSON without globals field\n// console.log(JSON.stringify(processedSeedData, null, 2));\n\nexport const Route = createFileRoute('/_layout/')({\n  component: Home,\n  loaderDeps: ({ search }) => {\n    return {\n      tags: search.tags,\n    };\n  },\n  loader: async ({ context, deps }) => {\n    context.queryClient.ensureQueryData({\n      ...convexQuery(api.collections.listCollections, {\n        tags: deps.tags && deps.tags.length > 0 ? deps.tags : undefined,\n        paginationOpts: {\n          numItems: DEFAULT_COLLECTION_PAGE_SIZE,\n          cursor: null,\n        },\n      }),\n      gcTime: 4000,\n    });\n  },\n});\n\nfunction Home() {\n  const { userId } = useAuth();\n  // Get tags from the search parameters\n  const search = useSearch({\n    from: '/_layout',\n  });\n\n  const {\n    results: collections,\n    isLoading,\n    loadMore,\n    status,\n  } = useConvexPaginatedQuery(\n    api.collections.listCollections,\n    {\n      tags: search.tags && search.tags.length > 0 ? search.tags : undefined,\n    },\n    { initialNumItems: DEFAULT_COLLECTION_PAGE_SIZE }, // or whatever page size you want\n  );\n\n  const { data: likedSeedsArray = [], isPending: likesPending } = useQuery({\n    ...convexQuery(api.likes.checkUserLikedSeedsNew, {\n      userId,\n      seeds: collections.map((c) => c.seed),\n    }),\n    gcTime: Number.POSITIVE_INFINITY,\n    enabled: Boolean(userId) && collections.length > 0 && status !== 'LoadingMore',\n  });\n\n  // Construct the record on the client side\n  const likedSeeds = Object.fromEntries(\n    collections.map((collection, index) => [collection.seed, likedSeedsArray[index] || false]),\n  );\n\n  return (\n    <>\n      <CollectionsDisplay\n        collections={collections}\n        likedSeeds={likedSeeds}\n        likesPending={likesPending}\n        isLoading={isLoading}\n      />\n\n      {status === 'CanLoadMore' && collections.length < 120 && (\n        <div className=\"flex justify-center mt-24\">\n          <button\n            onClick={() => loadMore(DEFAULT_COLLECTION_PAGE_SIZE)}\n            className=\"disable-animation-on-theme-change cursor-pointer font-poppins transition-all duration-200 \n                      px-5 py-1.5 rounded-sm border select-none z-10 whitespace-nowrap inline-flex justify-center \n                      items-center h-10 lowercase gap-1.5 text-sm\n                      bg-background/20 text-muted-foreground hover:text-foreground hover:border-muted-foreground/50 \n                      border-border font-normal backdrop-blur-sm\"\n            aria-label=\"Load more gradients\"\n          >\n            load more\n          </button>\n        </div>\n      )}\n    </>\n  );\n}\n"],"names":["SplitComponent","$","_c","userId","useAuth","t0","Symbol","for","from","search","useSearch","tags","length","undefined","t2","t1","t3","initialNumItems","DEFAULT_COLLECTION_PAGE_SIZE","results","collections","isLoading","loadMore","status","useConvexPaginatedQuery","t4","convexQuery","map","_temp","Boolean","t6","t5","gcTime","Number","POSITIVE_INFINITY","enabled","data","t7","isPending","likesPending","useQuery","t8","likedSeedsArray","t9","t10","collection","index","seed","Object","likedSeeds","jsx","CollectionsDisplay","t11","t12","c"],"mappings":"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"}