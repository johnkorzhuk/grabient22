/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as SeedRouteRouteImport } from './routes/$seed/route'
import { Route as LayoutIndexRouteImport } from './routes/_layout/index'
import { Route as SeedIndexRouteImport } from './routes/$seed/index'
import { Route as LayoutOldestRouteImport } from './routes/_layout/oldest'
import { Route as LayoutNewestRouteImport } from './routes/_layout/newest'
import { Route as LayoutCollectionRouteImport } from './routes/_layout/collection'
import { Route as SeedFullRouteImport } from './routes/$seed/full'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const SeedRouteRoute = SeedRouteRouteImport.update({
  id: '/$seed',
  path: '/$seed',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutIndexRoute = LayoutIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LayoutRoute,
} as any)
const SeedIndexRoute = SeedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => SeedRouteRoute,
} as any)
const LayoutOldestRoute = LayoutOldestRouteImport.update({
  id: '/oldest',
  path: '/oldest',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutNewestRoute = LayoutNewestRouteImport.update({
  id: '/newest',
  path: '/newest',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutCollectionRoute = LayoutCollectionRouteImport.update({
  id: '/collection',
  path: '/collection',
  getParentRoute: () => LayoutRoute,
} as any)
const SeedFullRoute = SeedFullRouteImport.update({
  id: '/full',
  path: '/full',
  getParentRoute: () => SeedRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/$seed': typeof SeedRouteRouteWithChildren
  '/$seed/full': typeof SeedFullRoute
  '/collection': typeof LayoutCollectionRoute
  '/newest': typeof LayoutNewestRoute
  '/oldest': typeof LayoutOldestRoute
  '/$seed/': typeof SeedIndexRoute
  '/': typeof LayoutIndexRoute
}
export interface FileRoutesByTo {
  '/$seed/full': typeof SeedFullRoute
  '/collection': typeof LayoutCollectionRoute
  '/newest': typeof LayoutNewestRoute
  '/oldest': typeof LayoutOldestRoute
  '/$seed': typeof SeedIndexRoute
  '/': typeof LayoutIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/$seed': typeof SeedRouteRouteWithChildren
  '/_layout': typeof LayoutRouteWithChildren
  '/$seed/full': typeof SeedFullRoute
  '/_layout/collection': typeof LayoutCollectionRoute
  '/_layout/newest': typeof LayoutNewestRoute
  '/_layout/oldest': typeof LayoutOldestRoute
  '/$seed/': typeof SeedIndexRoute
  '/_layout/': typeof LayoutIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/$seed'
    | '/$seed/full'
    | '/collection'
    | '/newest'
    | '/oldest'
    | '/$seed/'
    | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/$seed/full' | '/collection' | '/newest' | '/oldest' | '/$seed' | '/'
  id:
    | '__root__'
    | '/$seed'
    | '/_layout'
    | '/$seed/full'
    | '/_layout/collection'
    | '/_layout/newest'
    | '/_layout/oldest'
    | '/$seed/'
    | '/_layout/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  SeedRouteRoute: typeof SeedRouteRouteWithChildren
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/$seed': {
      id: '/$seed'
      path: '/$seed'
      fullPath: '/$seed'
      preLoaderRoute: typeof SeedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/$seed/': {
      id: '/$seed/'
      path: '/'
      fullPath: '/$seed/'
      preLoaderRoute: typeof SeedIndexRouteImport
      parentRoute: typeof SeedRouteRoute
    }
    '/_layout/oldest': {
      id: '/_layout/oldest'
      path: '/oldest'
      fullPath: '/oldest'
      preLoaderRoute: typeof LayoutOldestRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/newest': {
      id: '/_layout/newest'
      path: '/newest'
      fullPath: '/newest'
      preLoaderRoute: typeof LayoutNewestRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/collection': {
      id: '/_layout/collection'
      path: '/collection'
      fullPath: '/collection'
      preLoaderRoute: typeof LayoutCollectionRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/$seed/full': {
      id: '/$seed/full'
      path: '/full'
      fullPath: '/$seed/full'
      preLoaderRoute: typeof SeedFullRouteImport
      parentRoute: typeof SeedRouteRoute
    }
  }
}

interface SeedRouteRouteChildren {
  SeedFullRoute: typeof SeedFullRoute
  SeedIndexRoute: typeof SeedIndexRoute
}

const SeedRouteRouteChildren: SeedRouteRouteChildren = {
  SeedFullRoute: SeedFullRoute,
  SeedIndexRoute: SeedIndexRoute,
}

const SeedRouteRouteWithChildren = SeedRouteRoute._addFileChildren(
  SeedRouteRouteChildren,
)

interface LayoutRouteChildren {
  LayoutCollectionRoute: typeof LayoutCollectionRoute
  LayoutNewestRoute: typeof LayoutNewestRoute
  LayoutOldestRoute: typeof LayoutOldestRoute
  LayoutIndexRoute: typeof LayoutIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutCollectionRoute: LayoutCollectionRoute,
  LayoutNewestRoute: LayoutNewestRoute,
  LayoutOldestRoute: LayoutOldestRoute,
  LayoutIndexRoute: LayoutIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  SeedRouteRoute: SeedRouteRouteWithChildren,
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
